/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
#include "roLog.h"

/* Header for class com_robot_et_core_hardware_device_RobotDevice */

#ifndef _Included_com_robot_et_core_hardware_device_RobotDevice
#define _Included_com_robot_et_core_hardware_device_RobotDevice
#ifdef __cplusplus
extern "C" {
#endif

typedef struct tagRobot_Device_Func_S {
    int devId;
    int (* dev_init)(JNIEnv *env, jclass cls);
    int (* dev_unInit)(JNIEnv *env, jclass cls);
    int (* set_dev_status)(JNIEnv *env, jclass cls, jbyte * data, jint dataLen);
}Robot_Device_Func_S;

typedef struct tagRobotDevice_Thread_S {
    JNIEnv *env;
    jclass cls;
    jmethodID method;
} RobotDevice_Thread_S;

typedef enum {
    ROBOT_VOICE_DEV = 0,   /* 0 */
    ROBOT_TOUCH_DEV,       /* 1 */
    ROBOT_LIGHT_DEV,       /* 2 */
    ROBOT_SERIALPORT_DEV,  /* 3 */
    ROBOT_GPIO_DEV,        /* 4 */
    ROBOT_NOISY_DETECT_DEV,/* 5 */
    INVALID_ROBOT_DEV_ID,
};

typedef enum tagRobot_Device_ErrId_E {
    ROBOT_DEVICE_INPUT_PARAM_ERR = 0x1,
    ROBOT_DEVICE_LOCAL_BUFFER_LEN_ERR,

    ROBOT_TOUCH_OPEN_DEV_ERR = 0x10,
    ROBOT_TOUCH_GET_JAVAVM_ERR,
    ROBOT_TOUCH_FIND_CLASS_ERR,
    ROBOT_TOUCH_CALLBACK_ERR,
    ROBOT_TOUCH_THREAD_CREATE_ERR,

    ROBOT_VOICE_OPEN_DEV_ERR = 0x30,
    ROBOT_VOICE_GET_JAVAVM_ERR,
    ROBOT_VOICE_FIND_CLASS_ERR,
    ROBOT_VOICE_CALLBACK_ERR,
    ROBOT_VOICE_THREAD_CREATE_ERR,
    ROBOT_VOICE_SET_PARAM_ERR,
    ROBOT_VOICE_SET_GAIN_DIR_ERR,

    ROBOT_GPIO_OPEN_DEV_ERR = 0x50,
    ROBOT_GPIO_GET_JAVAVM_ERR,
    ROBOT_GPIO_FIND_CLASS_ERR,
    ROBOT_GPIO_CALLBACK_ERR,
    ROBOT_GPIO_THREAD_CREATE_ERR,
    ROBOT_GPIO_SET_PARAM_ERR,
    ROBOT_GPIO_WRITE_DEV_ERR,

    ROBOT_LIGHT_INPUT_ARRAY_LEN_ERR = 0x70,
    ROBOT_LIGHT_BREATH_COLOR_ERR,
    ROBOT_LIGHT_SET_PARAM_ERR,
    ROBOT_LIGHT_CTRL_LIGHT_ERR,
    ROBOT_LIGHT_THREAD_CREATE_ERR,

    ROBOT_SERIALPORT_OPEN_ERR = 0x90,
    ROBOT_SERIALPORT_THREAD_CREATE_ERR,
    ROBOT_SERIALPORT_WRITE_ERR,
    ROBOT_SERIALPORT_READ_ERR,
    ROBOT_SERIALPORT_SET_PARAM_ERR,

    ROBOT_NOISY_DETECT_OPEN_ERR = 0xB0,
    ROBOT_NOISY_DETECT_GET_JAVAVM_ERR,
    ROBOT_NOISY_DETECT_FIND_CLASS_ERR,
    ROBOT_NOISY_DETECT_CALLBACK_ERR,
    ROBOT_NOISY_DETECT_THREAD_CREATE_ERR,
    ROBOT_NOISY_DETECT_SET_PARA_ERR,
}Robot_Device_ErrId_E;

/*
 * Class:     com_robot_et_core_hardware_device_RobotDevice
 * Method:    initDevice
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_com_robot_et_core_hardware_device_RobotDevice_initDevice
  (JNIEnv *, jclass);

/*
 * Class:     com_robot_et_core_hardware_device_RobotDevice
 * Method:    unInitDevice
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_com_robot_et_core_hardware_device_RobotDevice_unInitDevice
  (JNIEnv *, jclass);

/*
 * Class:     com_robot_et_core_hardware_device_RobotDevice
 * Method:    setDeviceStatus
 * Signature: (I[B)I
 */
JNIEXPORT jint JNICALL Java_com_robot_et_core_hardware_device_RobotDevice_setDeviceStatus
  (JNIEnv *, jclass, jint, jbyteArray);

/*
 * Class:     com_robot_et_core_hardware_device_RobotDevice
 * Method:    setLightStatusStart
 * Signature: (I)I
 */
JNIEXPORT jint JNICALL Java_com_robot_et_core_hardware_device_RobotDevice_setLightStatusStart
  (JNIEnv *, jclass, jint lightColor);

/*
 * Class:     com_robot_et_core_hardware_device_RobotDevice
 * Method:    setLightStatusEnd
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_com_robot_et_core_hardware_device_RobotDevice_setLightStatusEnd
  (JNIEnv *, jclass);

extern int RobotTouchInit(JNIEnv *env, jclass cls);
extern int RobotTouchUnInit(JNIEnv *env, jclass cls);
extern int RobotVoiceInit(JNIEnv *env, jclass cls);
extern int RobotVoiceUnInit(JNIEnv *env, jclass cls);
extern int RobotVoiceSetDev(JNIEnv *env, jclass cls, jbyte* data, jint dataLen);
extern int RobotGpioInit(JNIEnv *env, jclass cls);
extern int RobotGpioUnInit(JNIEnv *env, jclass cls);
extern int RobotGpioSetDev(JNIEnv *env, jclass cls, jbyte* data, jint dataLen);
extern int RobotLightInit(JNIEnv *env, jclass cls);
extern int RobotLightUnInit(JNIEnv *env, jclass cls);
extern int RobotLightDevSet(JNIEnv *env, jclass cls, jbyte* data, jint dataLen);
extern int RobotSerialPortInit(JNIEnv *env, jclass cls);
extern int RobotSerialPortUnInit(JNIEnv *env, jclass cls);
extern int RobotSerialPortSet(JNIEnv *env, jclass cls, jbyte* data, jint dataLen);
extern int RobotNoisyDetectInit(JNIEnv *env, jclass cls);
extern int RobotNoisyDetectUnInit(JNIEnv *env, jclass cls);
extern int RobotNoisyDetectSet(JNIEnv *env, jclass cls, jbyte* data, jint dataLen);



#ifdef __cplusplus
}
#endif
#endif
